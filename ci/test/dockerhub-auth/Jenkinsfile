pipeline {
    // @see https://www.jenkins.io/doc/book/pipeline/syntax/#agent-parameters
    agent any

    environment {
        REGISTRY_CREDENTIALS_ID = 'dockerhub-registry-credentials'
    }

    stages {

        stage("test fetch from dockerhub with pro plan user credentials") {
            agent {
                // @see https://stackoverflow.com/questions/44206339/jenkins-declarative-pipeline-docker-registry if you would like to adapt the params below to source container image from private registry
                docker {
                    image 'pacphi/uuidgen:latest'
                    label 'pez'
                    args  '-i --rm -e HOME=/tmp --entrypoint='
                    reuseNode true
                    registryCredentialsId "${REGISTRY_CREDENTIALS_ID}"
                }
            }
            steps {
                script {
                    sh('uuidgen > uuid.txt')
                    def token = readFile file: 'uuid.txt'
                    sh("echo \"Here's the token [ ${token} ]\"")
                }
            }
        }
    }
    
    post {
        // Always runs. And it runs before any of the other post conditions.
        always {
            // Wipe out the workspace before we finish!
            deleteDir()
        }
    }
    
    // The options directive is for configuration that applies to the whole job.
    options {
        // Make sure we only keep 10 builds at a time, so we don't fill up our storage!
        buildDiscarder(logRotator(numToKeepStr:'10'))
        
        // And we'd really like to be sure that this build doesn't hang forever, so
        // let's time it out after 30 minutes.
        timeout(time: 30, unit: 'MINUTES')
    }
}